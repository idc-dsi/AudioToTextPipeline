# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - AudioToTextPipline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the Python version for the environment
      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Step 3: Install dependencies from the requirements.txt file
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Zip the contents of the application while excluding unnecessary files
      - name: Zip artifact for deployment
        run: |
          zip -r release.zip . -x ".git/*" -x ".github/*" -x "venv/*" -x "*.pyc" -x "__pycache__/*"

      # Step 5: Upload the zipped artifact for the deployment job
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # This is required for requesting the JWT

    steps:
      # Step 1: Download the artifact from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      # Step 2: Unzip the artifact for deployment
      - name: Unzip artifact for deployment
        run: unzip release.zip

      # Step 3: Login to Azure using credentials stored in GitHub Secrets
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_45137F03DD7B47C2A518D5E0A4F7A9B7 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_923E1984E0264D4DACE07823C7ADDF0F }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_A9A9C785F21F491F945AACC85B8BCA69 }}

      # Step 4: Deploy the application to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'AudioToTextPipline'  # Make sure this matches your Azure Web App name
          slot-name: 'Production'         # Use the default slot or specify a slot name if needed
        timeout-minutes: 60  # Increase timeout as necessary to avoid timeouts during deployment

      # Optional Step: Show directory structure for debugging purposes (useful for troubleshooting)
      - name: Show directory structure (for debugging)
        run: ls -R
